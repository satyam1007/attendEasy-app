import { jsPDF } from "jspdf";
import autoTable from "jspdf-autotable";

function PDFGenerator({ record }) {
  const generatePDF = () => {
    const doc = new jsPDF();

    // Header bar
    doc.setFillColor(63, 81, 181); // Blue
    doc.rect(0, 0, 220, 30, "F");

    doc.setFont("helvetica");
    doc.setFontSize(20);
    doc.setTextColor(255, 255, 255);
    doc.text("Attendance Report", 105, 20, { align: "center" });

    doc.setTextColor(0, 0, 0);
    doc.setFontSize(12);
    doc.text(`Date: ${record.date}`, 14, 40);

    // Summary
    doc.setFontSize(14);
    doc.setTextColor(63, 81, 181);
    doc.text("Summary", 14, 55);

    const total = record.present.length + record.absent.length;
    const presentCount = record.present.length;
    const absentCount = record.absent.length;

    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0);
    doc.text(`Total Students: ${total}`, 20, 65);
    doc.setTextColor(46, 125, 50);
    doc.text(
      `Present: ${presentCount} (${Math.round((presentCount / total) * 100)}%)`,
      20,
      75
    );
    doc.setTextColor(198, 40, 40);
    doc.text(
      `Absent: ${absentCount} (${Math.round((absentCount / total) * 100)}%)`,
      20,
      85
    );

    doc.setTextColor(0, 0, 0);
    doc.setDrawColor(200, 200, 200);
    doc.line(14, 90, 196, 90);

    doc.setFontSize(16);
    doc.text("Attendance List", 14, 105);

    // Prepare table data with metadata (status and row color)
    const tableData = [
      ...record.present.map((s) => ({
        status: "Present",
        name: s.name,
        rollNumber: s.rollNumber,
        rowColor: [232, 245, 233], // Light green
      })),
      ...record.absent.map((s) => ({
        status: "Absent",
        name: s.name,
        rollNumber: s.rollNumber,
        rowColor: [255, 235, 238], // Light red
      })),
    ];

    // AutoTable with colored rows
    autoTable(doc, {
      startY: 110,
      head: [["Status", "Name", "Roll Number"]],
      body: tableData.map((row) => [row.status, row.name, row.rollNumber]),
      styles: {
        fontSize: 11,
        cellPadding: 4,
      },
      headStyles: {
        fillColor: [63, 81, 181],
        textColor: 255,
        halign: "center",
      },
      columnStyles: {
        0: { halign: "center" },
        2: { halign: "center" },
      },
      didParseCell: (data) => {
        if (data.section === "body") {
          const rowIndex = data.row.index;
          const bgColor = tableData[rowIndex].rowColor;
          data.cell.styles.fillColor = bgColor;
        }
      },
    });

    // Footer
    const pageCount = doc.internal.getNumberOfPages();
    for (let i = 1; i <= pageCount; i++) {
      doc.setPage(i);
      doc.setFontSize(10);
      doc.setTextColor(150, 150, 150);
      doc.text(`Page ${i} of ${pageCount}`, 105, 285, { align: "center" });
      doc.text("Generated by Attendance System", 195, 285, { align: "right" });
    }

    doc.save(`Attendance_Report_${record.date.replace(/\//g, "-")}.pdf`);
  };

  return (
    <button
      onClick={generatePDF}
      className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors shadow-md"
    >
      Download PDF Report
    </button>
  );
}

export default PDFGenerator;
